# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven

name: Java CD with Maven

on:
  workflow_dispatch:
#   workflow_run:
#     workflows: ["Java CI with Maven"]
#     types:
#         - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
 
      - name: Download Jar from CI
        uses: actions/download-artifact@v4
        with:
          name: spring-petclinic-jar
 
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}
 
      - name: Copy JAR to EC2
        run: scp -o StrictHostKeyChecking=no target/spring-petclinic-*.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/
 
      - name: Start Spring PetClinic
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "nohup java -jar /home/ubuntu/spring-petclinic-*.jar &"
